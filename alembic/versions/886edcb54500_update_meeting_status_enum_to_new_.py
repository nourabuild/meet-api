"""update_meeting_status_enum_to_new_approved_canceled

Revision ID: 886edcb54500
Revises: adf57da972b5
Create Date: 2025-08-05 02:14:41.352701

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '886edcb54500'
down_revision: Union[str, None] = 'adf57da972b5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('follow', 'follower_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('follow', 'following_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('meeting', 'title',
               existing_type=sa.VARCHAR(length=255),
               type_=sqlmodel.sql.sqltypes.AutoString(length=40),
               existing_nullable=False)
    op.alter_column('meeting', 'location',
               existing_type=sa.VARCHAR(length=255),
               type_=sqlmodel.sql.sqltypes.AutoString(length=40),
               existing_nullable=False)
    op.alter_column('meeting', 'location_url',
               existing_type=sa.VARCHAR(length=500),
               type_=sqlmodel.sql.sqltypes.AutoString(length=100),
               existing_nullable=True)
    op.alter_column('meetingtype', 'title',
               existing_type=sa.VARCHAR(length=50),
               type_=sqlmodel.sql.sqltypes.AutoString(length=30),
               existing_nullable=False)
    op.drop_constraint(op.f('meetingtype_title_key'), 'meetingtype', type_='unique')
    op.create_index(op.f('ix_meetingtype_title'), 'meetingtype', ['title'], unique=True)
    op.alter_column('user', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sqlmodel.sql.sqltypes.AutoString(length=40),
               existing_nullable=False)
    op.alter_column('user', 'account',
               existing_type=sa.VARCHAR(length=255),
               type_=sqlmodel.sql.sqltypes.AutoString(length=32),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'account',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=32),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('user', 'name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=40),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_index(op.f('ix_meetingtype_title'), table_name='meetingtype')
    op.create_unique_constraint(op.f('meetingtype_title_key'), 'meetingtype', ['title'], postgresql_nulls_not_distinct=False)
    op.alter_column('meetingtype', 'title',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=30),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('meeting', 'location_url',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=100),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.alter_column('meeting', 'location',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=40),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('meeting', 'title',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=40),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('follow', 'following_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('follow', 'follower_id',
               existing_type=sa.UUID(),
               nullable=False)
    # ### end Alembic commands ###
